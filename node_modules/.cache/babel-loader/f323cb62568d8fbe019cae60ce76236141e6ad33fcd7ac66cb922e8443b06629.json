{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0417\\u0430\\u0445\\u0430\\u0440\\\\Desktop\\\\arlezu-project\\\\arlezu\\\\src\\\\components\\\\CardsRepeater\\\\CardsRepeater.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport style from \"./CardsRepeater.module.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { RepeatButtons } from \"./RepeatButtons/RepeatButtons\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardRepeater = _ref => {\n  _s();\n  let {\n    cards\n  } = _ref;\n  const navigate = useNavigate();\n  const [isAnswerClicked, setIsAnswerClicked] = useState(false);\n  let cardsForRepeat = [];\n  let [step, setStep] = useState(0);\n  cards.map(card => {\n    if (card.repeatTime > -1) cardsForRepeat = [...cardsForRepeat, card.id];\n  });\n  const showNextCard = () => {\n    if (step < cardsForRepeat.length - 1) {\n      setStep(++step);\n    } else {\n      navigate(\"/\");\n    }\n  };\n  useEffect(() => {\n    setIsAnswerClicked(false);\n  }, [step]);\n  const showAnswer = () => {\n    setIsAnswerClicked(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.cardContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.img,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cards[cardsForRepeat[step] - 1].imgSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.card,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.textTop,\n          children: isAnswerClicked ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.word,\n            children: cards[cardsForRepeat[step] - 1].word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.wordTranslation,\n            children: cards[cardsForRepeat[step] - 1].wordTranslation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.textBottom,\n          children: isAnswerClicked ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: cards[cardsForRepeat[step] - 1].sentenceTranslation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: cards[cardsForRepeat[step] - 1].sentence\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.buttons,\n      children: isAnswerClicked ? /*#__PURE__*/_jsxDEV(RepeatButtons, {\n        showNextCard: showNextCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.showAnswerBtn,\n        onClick: showAnswer,\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CardRepeater, \"cXzGiY5gXVf5Dnfo0eqJLjchBs0=\", false, function () {\n  return [useNavigate];\n});\n_c = CardRepeater;\nexport { CardRepeater };\nvar _c;\n$RefreshReg$(_c, \"CardRepeater\");","map":{"version":3,"names":["React","useState","style","useNavigate","RepeatButtons","useEffect","CardRepeater","cards","navigate","isAnswerClicked","setIsAnswerClicked","cardsForRepeat","step","setStep","map","card","repeatTime","id","showNextCard","length","showAnswer","cardContainer","img","imgSrc","textTop","word","wordTranslation","textBottom","sentenceTranslation","sentence","buttons","showAnswerBtn"],"sources":["C:/Users/Захар/Desktop/arlezu-project/arlezu/src/components/CardsRepeater/CardsRepeater.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport style from \"./CardsRepeater.module.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RepeatButtons } from \"./RepeatButtons/RepeatButtons\";\r\nimport { useEffect } from \"react\";\r\nimport { ICard } from \"../../types/types\";\r\n\r\ninterface CardsRepeaterTypes {\r\n  cards: ICard[];\r\n}\r\n\r\nconst CardRepeater: React.FC<CardsRepeaterTypes> = ({ cards }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [isAnswerClicked, setIsAnswerClicked] = useState(false);\r\n  let cardsForRepeat: Array<number> = [];\r\n  let [step, setStep] = useState(0);\r\n\r\n  cards.map((card: ICard) => {\r\n    if (card.repeatTime > -1) cardsForRepeat = [...cardsForRepeat, card.id];\r\n  });\r\n\r\n  const showNextCard = () => {\r\n    if (step < cardsForRepeat.length - 1) {\r\n      setStep(++step);\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsAnswerClicked(false);\r\n  }, [step]);\r\n\r\n  const showAnswer = () => {\r\n    setIsAnswerClicked(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.cardContainer}>\r\n        <div className={style.img}>\r\n          {<img src={cards[cardsForRepeat[step] - 1].imgSrc} />}\r\n        </div>\r\n\r\n        <div className={style.card}>\r\n          <div className={style.textTop}>\r\n            {isAnswerClicked ? (\r\n              <p className={style.word}>\r\n                {cards[cardsForRepeat[step] - 1].word}\r\n              </p>\r\n            ) : (\r\n              <p className={style.wordTranslation}>\r\n                {cards[cardsForRepeat[step] - 1].wordTranslation}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={style.textBottom}>\r\n            {isAnswerClicked ? (\r\n              <p>{cards[cardsForRepeat[step] - 1].sentenceTranslation}</p>\r\n            ) : (\r\n              <p>{cards[cardsForRepeat[step] - 1].sentence}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={style.buttons}>\r\n        {isAnswerClicked ? (\r\n          <RepeatButtons showNextCard={showNextCard} />\r\n        ) : (\r\n          <button className={style.showAnswerBtn} onClick={showAnswer}>\r\n            Показать ответ\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CardRepeater };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}