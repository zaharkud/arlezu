{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0417\\u0430\\u0445\\u0430\\u0440\\\\Desktop\\\\arlezu-project\\\\arlezu\\\\src\\\\components\\\\CardList\\\\CardListItem\\\\CardListItem.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { CardListItemContent } from \"./CardListItemContent/CardListItemContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardListItem = _ref => {\n  _s();\n  let {\n    cards,\n    step,\n    setStep\n  } = _ref;\n  //State for sentence`s translation\n  const [sentenceTumbler, setSentenceTumbler] = useState(false);\n\n  //Showing the previous card\n  const changeToPrevStep = () => {\n    step <= cards.length - 1 && step > 0 ? setStep(--step) : setStep(cards.length - 1);\n  };\n\n  //Showing the next card\n  const changeToNextStep = () => {\n    step < cards.length - 1 ? setStep(++step) : setStep(0);\n  };\n\n  //Changing the sentence`s translation after changing the card\n  useEffect(() => {\n    setSentenceTumbler(false);\n  }, [step]);\n  return /*#__PURE__*/_jsxDEV(CardListItemContent, {\n    changeToPrevStep: changeToPrevStep,\n    changeToNextStep: changeToNextStep,\n    cards: cards,\n    step: step,\n    sentenceTumbler: sentenceTumbler,\n    setSentenceTumbler: setSentenceTumbler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CardListItem, \"A/uvzsZVWQugi8Xj9nCPRMi1h08=\");\n_c = CardListItem;\nexport { CardListItem };\nvar _c;\n$RefreshReg$(_c, \"CardListItem\");","map":{"version":3,"names":["useEffect","useState","CardListItemContent","CardListItem","cards","step","setStep","sentenceTumbler","setSentenceTumbler","changeToPrevStep","length","changeToNextStep"],"sources":["C:/Users/Захар/Desktop/arlezu-project/arlezu/src/components/CardList/CardListItem/CardListItem.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { CardListItemContent } from \"./CardListItemContent/CardListItemContent\";\r\nimport { ICard } from \"../../../types/types\";\r\n\r\ninterface CardListItemTypes {\r\n  cards: ICard[];\r\n  step: number;\r\n  setStep: (value: number) => void;\r\n}\r\n\r\nconst CardListItem: React.FC<CardListItemTypes> = ({\r\n  cards,\r\n  step,\r\n  setStep,\r\n}) => {\r\n  \r\n  //State for sentence`s translation\r\n  const [sentenceTumbler, setSentenceTumbler] = useState(false);\r\n\r\n  //Showing the previous card\r\n  const changeToPrevStep = () => {\r\n    step <= cards.length - 1 && step > 0\r\n      ? setStep(--step)\r\n      : setStep(cards.length - 1);\r\n  };\r\n\r\n  //Showing the next card\r\n  const changeToNextStep = () => {\r\n    step < cards.length - 1 ? setStep(++step) : setStep(0);\r\n  };\r\n\r\n  //Changing the sentence`s translation after changing the card\r\n  useEffect(() => {\r\n    setSentenceTumbler(false);\r\n  }, [step]);\r\n\r\n  return (\r\n    <CardListItemContent\r\n      changeToPrevStep={changeToPrevStep}\r\n      changeToNextStep={changeToNextStep}\r\n      cards={cards}\r\n      step={step}\r\n      sentenceTumbler={sentenceTumbler}\r\n      setSentenceTumbler={setSentenceTumbler}\r\n    />\r\n  );\r\n};\r\n\r\nexport { CardListItem };\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,2CAA2C;AAAC;AAShF,MAAMC,YAAyC,GAAG,QAI5C;EAAA;EAAA,IAJ6C;IACjDC,KAAK;IACLC,IAAI;IACJC;EACF,CAAC;EAEC;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAMQ,gBAAgB,GAAG,MAAM;IAC7BJ,IAAI,IAAID,KAAK,CAACM,MAAM,GAAG,CAAC,IAAIL,IAAI,GAAG,CAAC,GAChCC,OAAO,CAAC,EAAED,IAAI,CAAC,GACfC,OAAO,CAACF,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BN,IAAI,GAAGD,KAAK,CAACM,MAAM,GAAG,CAAC,GAAGJ,OAAO,CAAC,EAAED,IAAI,CAAC,GAAGC,OAAO,CAAC,CAAC,CAAC;EACxD,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACdQ,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACE,QAAC,mBAAmB;IAClB,gBAAgB,EAAEI,gBAAiB;IACnC,gBAAgB,EAAEE,gBAAiB;IACnC,KAAK,EAAEP,KAAM;IACb,IAAI,EAAEC,IAAK;IACX,eAAe,EAAEE,eAAgB;IACjC,kBAAkB,EAAEC;EAAmB;IAAA;IAAA;IAAA;EAAA,QACvC;AAEN,CAAC;AAAC,GApCIL,YAAyC;AAAA,KAAzCA,YAAyC;AAsC/C,SAASA,YAAY;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}