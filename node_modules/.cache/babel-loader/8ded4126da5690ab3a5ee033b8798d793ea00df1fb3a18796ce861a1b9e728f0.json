{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0417\\u0430\\u0445\\u0430\\u0440\\\\Desktop\\\\arlezu-project\\\\arlezu\\\\src\\\\services\\\\routing\\\\AppRouter.tsx\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { authRoutes, publicRoutes } from \"./routes\";\nimport { GeneralContext } from \"context/context\";\nimport { MAIN_ROUTE } from \"services/consts/route.consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  _s();\n  const appContext = useContext(GeneralContext);\n  const getPrivateRoutes = () => {\n    return authRoutes.map(_ref => {\n      let {\n        path\n      } = _ref;\n      return path;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [appContext.isAuth && authRoutes.map(_ref2 => {\n      let {\n        path,\n        component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: component\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this);\n    }), appContext.isAuth && authRoutes.map(_ref3 => {\n      let {\n        path,\n        component\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: component\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }, this);\n    }), publicRoutes.map(_ref4 => {\n      let {\n        path,\n        component\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: component\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: MAIN_ROUTE,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AppRouter, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["Routes","Route","Navigate","useContext","authRoutes","publicRoutes","GeneralContext","MAIN_ROUTE","AppRouter","appContext","getPrivateRoutes","map","path","isAuth","component"],"sources":["C:/Users/Захар/Desktop/arlezu-project/arlezu/src/services/routing/AppRouter.tsx"],"sourcesContent":["import { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\n\r\nimport { authRoutes, publicRoutes } from \"./routes\";\r\nimport { GeneralContext } from \"context/context\";\r\nimport { IContext } from \"types/types\";\r\nimport {\r\n  DICTIONARY_LIST_ROUTE,\r\n  DICTIONARY_VIEWER_ROUTE,\r\n  MAIN_ROUTE,\r\n} from \"services/consts/route.consts\";\r\n\r\nconst AppRouter = () => {\r\n  const appContext = useContext(GeneralContext) as IContext;\r\n\r\n  const getPrivateRoutes = () => {\r\n    return authRoutes.map(({ path }) => path);\r\n  };\r\n\r\n  return (\r\n    <Routes>\r\n      {appContext.isAuth &&\r\n        authRoutes.map(({ path, component }) => {\r\n          return <Route key={path} path={path} element={component} />;\r\n        })}\r\n      {appContext.isAuth &&\r\n        authRoutes.map(({ path, component }) => {\r\n          return <Route key={path} path={path} element={component} />;\r\n        })}\r\n      {publicRoutes.map(({ path, component }) => {\r\n        return <Route key={path} path={path} element={component} />;\r\n      })}\r\n      <Route path=\"*\" element={<Navigate to={MAIN_ROUTE} replace />} />\r\n    </Routes>\r\n  );\r\n};\r\nexport default AppRouter;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,UAAU,EAAEC,YAAY,QAAQ,UAAU;AACnD,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,SAGEC,UAAU,QACL,8BAA8B;AAAC;AAEtC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAMC,UAAU,GAAGN,UAAU,CAACG,cAAc,CAAa;EAEzD,MAAMI,gBAAgB,GAAG,MAAM;IAC7B,OAAON,UAAU,CAACO,GAAG,CAAC;MAAA,IAAC;QAAEC;MAAK,CAAC;MAAA,OAAKA,IAAI;IAAA,EAAC;EAC3C,CAAC;EAED,oBACE,QAAC,MAAM;IAAA,WACJH,UAAU,CAACI,MAAM,IAChBT,UAAU,CAACO,GAAG,CAAC,SAAyB;MAAA,IAAxB;QAAEC,IAAI;QAAEE;MAAU,CAAC;MACjC,oBAAO,QAAC,KAAK;QAAY,IAAI,EAAEF,IAAK;QAAC,OAAO,EAAEE;MAAU,GAArCF,IAAI;QAAA;QAAA;QAAA;MAAA,QAAoC;IAC7D,CAAC,CAAC,EACHH,UAAU,CAACI,MAAM,IAChBT,UAAU,CAACO,GAAG,CAAC,SAAyB;MAAA,IAAxB;QAAEC,IAAI;QAAEE;MAAU,CAAC;MACjC,oBAAO,QAAC,KAAK;QAAY,IAAI,EAAEF,IAAK;QAAC,OAAO,EAAEE;MAAU,GAArCF,IAAI;QAAA;QAAA;QAAA;MAAA,QAAoC;IAC7D,CAAC,CAAC,EACHP,YAAY,CAACM,GAAG,CAAC,SAAyB;MAAA,IAAxB;QAAEC,IAAI;QAAEE;MAAU,CAAC;MACpC,oBAAO,QAAC,KAAK;QAAY,IAAI,EAAEF,IAAK;QAAC,OAAO,EAAEE;MAAU,GAArCF,IAAI;QAAA;QAAA;QAAA;MAAA,QAAoC;IAC7D,CAAC,CAAC,eACF,QAAC,KAAK;MAAC,IAAI,EAAC,GAAG;MAAC,OAAO,eAAE,QAAC,QAAQ;QAAC,EAAE,EAAEL,UAAW;QAAC,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEb,CAAC;AAAC,GAvBIC,SAAS;AAAA,KAATA,SAAS;AAwBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}