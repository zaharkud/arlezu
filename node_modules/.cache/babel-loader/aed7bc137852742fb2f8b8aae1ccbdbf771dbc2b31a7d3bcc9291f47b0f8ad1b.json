{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0417\\u0430\\u0445\\u0430\\u0440\\\\Desktop\\\\arlezu-project\\\\arlezu\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//import \"./scss/App.scss\";\n// import { DictionaryViewer } from \"./components/mainContent/DictionaryViewer/DictionaryViewer\";\n// import { DictionaryList } from \"./components/mainContent/DictionaryList/DictionaryList\";\n// import { CardRepeater } from \"./components/mainContent/CardsRepeater/CardsRepeater\";\n// import { cardsContent } from \"./cards-base\";\n// import { InitialPage } from \"./components/InitialPage/InitialPage\";\n// import { SignUpForm } from \"./components/auth/SignUpForm/SignUpForm\";\n// import { LogInForm } from \"./components/auth/LogInForm/LogInForm\";\n// import { Layout } from \"./components/Layout/Layout\";\n// import { Settings } from \"./components/additionalContent/Settings/Settings\";\n// import { About } from \"./pages/About/About\";\n// import { Instruction } from \"./components/additionalContent/Instruction/Instruction\";\n// import { Profile } from \"./components/additionalContent/Profile/Profile\";\n// import { Alphabet } from \"./components/mainContent/Alphabet/Alphabet\";\n// import { Grammar } from \"./components/mainContent/Grammar/Grammar\";\n// import { CardsContext } from \"./context/context\";\n// import { ICard } from \"./types/types\";\n\nconst App = () => {\n  _s();\n  //const [cardsArray, useCardsArray] = useState<ICard[]>(cardsContent);\n  const [step, setStep] = useState(0);\n  const [isAuth, setIsAuth] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ds\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n  // <CardsContext.Provider value={cardsArray}>\n  //   <Routes>\n  //     <Route path=\"/\" element={<Layout />}>\n  //       <Route\n  //         path=\"/\"\n  //         element={<InitialPage isAuth={isAuth} setIsAuth={setIsAuth} />}\n  //       />\n  //       <Route\n  //         path=\"/cards-list\"\n  //         element={<DictionaryList setStep={setStep} />}\n  //       />\n  //       <Route\n  //         path=\"/cards-viewer\"\n  //         element={<DictionaryViewer step={step} setStep={setStep} />}\n  //       />\n  //       <Route\n  //         path=\"/cards-repeater\"\n  //         element={<CardRepeater cards={cardsArray} />}\n  //       />\n  //       <Route path=\"/\" element={<SignUpForm />} />\n  //       <Route path=\"/log-in\" element={<LogInForm />} />\n  //       <Route path=\"/settings\" element={<Settings />} />\n  //       <Route path=\"/about\" element={<About />} />\n  //       <Route path=\"/instruction\" element={<Instruction />} />\n  //       <Route path=\"/profile\" element={<Profile />} />\n  //       <Route path=\"/alphabet\" element={<Alphabet />} />\n  //       <Route path=\"/grammar\" element={<Grammar />} />\n  //     </Route>\n  //   </Routes>\n  // </CardsContext.Provider>\n  ;\n};\n_s(App, \"IIUUsNgTp07aFLlqCIZi1KNcd9o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","step","setStep","isAuth","setIsAuth"],"sources":["C:/Users/Захар/Desktop/arlezu-project/arlezu/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport test from \"\";\n//import \"./scss/App.scss\";\n// import { DictionaryViewer } from \"./components/mainContent/DictionaryViewer/DictionaryViewer\";\n// import { DictionaryList } from \"./components/mainContent/DictionaryList/DictionaryList\";\n// import { CardRepeater } from \"./components/mainContent/CardsRepeater/CardsRepeater\";\n// import { cardsContent } from \"./cards-base\";\n// import { InitialPage } from \"./components/InitialPage/InitialPage\";\n// import { SignUpForm } from \"./components/auth/SignUpForm/SignUpForm\";\n// import { LogInForm } from \"./components/auth/LogInForm/LogInForm\";\n// import { Layout } from \"./components/Layout/Layout\";\n// import { Settings } from \"./components/additionalContent/Settings/Settings\";\n// import { About } from \"./pages/About/About\";\n// import { Instruction } from \"./components/additionalContent/Instruction/Instruction\";\n// import { Profile } from \"./components/additionalContent/Profile/Profile\";\n// import { Alphabet } from \"./components/mainContent/Alphabet/Alphabet\";\n// import { Grammar } from \"./components/mainContent/Grammar/Grammar\";\n// import { CardsContext } from \"./context/context\";\n// import { ICard } from \"./types/types\";\n\nconst App = () => {\n  //const [cardsArray, useCardsArray] = useState<ICard[]>(cardsContent);\n  const [step, setStep] = useState<number>(0);\n  const [isAuth, setIsAuth] = useState<boolean>(false);\n\n  return (\n    <div>ds</div>\n    // <CardsContext.Provider value={cardsArray}>\n    //   <Routes>\n    //     <Route path=\"/\" element={<Layout />}>\n    //       <Route\n    //         path=\"/\"\n    //         element={<InitialPage isAuth={isAuth} setIsAuth={setIsAuth} />}\n    //       />\n    //       <Route\n    //         path=\"/cards-list\"\n    //         element={<DictionaryList setStep={setStep} />}\n    //       />\n    //       <Route\n    //         path=\"/cards-viewer\"\n    //         element={<DictionaryViewer step={step} setStep={setStep} />}\n    //       />\n    //       <Route\n    //         path=\"/cards-repeater\"\n    //         element={<CardRepeater cards={cardsArray} />}\n    //       />\n    //       <Route path=\"/\" element={<SignUpForm />} />\n    //       <Route path=\"/log-in\" element={<LogInForm />} />\n    //       <Route path=\"/settings\" element={<Settings />} />\n    //       <Route path=\"/about\" element={<About />} />\n    //       <Route path=\"/instruction\" element={<Instruction />} />\n    //       <Route path=\"/profile\" element={<Profile />} />\n    //       <Route path=\"/alphabet\" element={<Alphabet />} />\n    //       <Route path=\"/grammar\" element={<Grammar />} />\n    //     </Route>\n    //   </Routes>\n    // </CardsContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAU,KAAK,CAAC;EAEpD,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC,GAtCIC,GAAG;AAAA,KAAHA,GAAG;AAwCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}